using BlockParser;

namespace MAPIInspector.Parsers
{
    /// <summary>
    /// 2.2.5.1.2.2 OP_REPLY and OP_OOF_REPLY ActionData Structure
    /// This type is specified in MS-OXORULE section 2.2.5.1.2.2 OP_REPLY and OP_OOF_REPLY ActionData Structure for Extended Rules
    /// </summary>
    public class OP_REPLY_and_OP_OOF_REPLY_ActionData_forExtended : Block
    {
        /// <summary>
        /// An integer that specifies the size, in bytes, of the ReplyTemplateMessageEID field.
        /// </summary>
        public BlockT<uint> MessageEIDSize;

        /// <summary>
        /// A Message EntryID structure, as specified in [MS-OXCDATA] section 2.2.4.2, that contains the entry ID of the reply template.
        /// </summary>
        public MessageEntryID ReplyTemplateMessageEID;

        /// <summary>
        /// A GUID that is generated by the client in the process of creating a reply template. 
        /// </summary>
        public BlockGuid ReplyTemplateGUID;

        /// <summary>
        /// Parse the OP_REPLY_and_OP_OOF_REPLY_ActionData_forExtended structure.
        /// </summary>
        protected override void Parse()
        {
            MessageEIDSize = ParseAs<byte, uint>();
            ReplyTemplateMessageEID = Parse<MessageEntryID>();
            ReplyTemplateGUID = Parse<BlockGuid>();
        }

        protected override void ParseBlocks()
        {
            AddChildBlockT(MessageEIDSize, "MessageEIDSize");
            AddLabeledChild(ReplyTemplateMessageEID, "ReplyTemplateMessageEID");
            this.AddChildGuid(ReplyTemplateGUID, "ReplyTemplateGUID");
        }
    }
}
