name: $(Year:yy).0.$(date:yy)$(DayOfYear)$(rev:.rr)
variables:
  Prod.Company: 'Microsoft Corporation'
  Prod.BuildVersion: $(Build.BuildNumber)

trigger: none
pr: none

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - msbuild
  - visualstudio
  - vstest

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - checkout: self
      clean: true

    - task: NuGetCommand@2
      displayName: NuGet restore

    - powershell: |
        Write-Host "Prod.Company: '$(Prod.Company)'"
        Write-Host "Prod.BuildVersion: '$(Prod.BuildVersion)'"
        # create year variable
        $year = (Get-Date -Format "yyyy")
        $copyright = "Copyright Â© $year $(Prod.Company). All rights reserved."
        Write-Host "copyright: '$copyright'"
        Write-Host "##vso[task.setvariable variable=Prod.Copyright;]$copyright"
      displayName: Debug Variables
      continueOnError: true

    - powershell: |
        Write-Host "Prod.Copyright: '$(Prod.Copyright)'"
      displayName: More Debug Variables
      continueOnError: true

    - task: Assembly-Info-NetFramework@3
      displayName: 'Set Assembly Manifest Data'
      inputs:
        FileNames: |
          **\AssemblyInfo.cs
        Company: '$(Prod.Company)'
        Copyright: '$(Prod.Copyright)'
        Configuration: '$(Build.Configuration)'
        VersionNumber: '$(Prod.BuildVersion)'
        FileVersionNumber: '$(Prod.BuildVersion)'

    - powershell: 
        .\scripts\machine-setup.ps1
      displayName: 'Install Tools'

    - task: VSBuild@1
      displayName: Build
      inputs:
        solution: '**/*.sln'
        vsVersion: latest
        configuration: "Release"
        clean: true
        maximumCpuCount: true
        msbuildArchitecture: x64
        createLogFile: true

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: |
          **\bin\**\MAPIFiddlerInspector.dll
          **\bin\**\MAPIFiddlerInspector.pdb
          **\bin\**\FSSHTTPandWOPIFiddlerInspector.dll
          **\bin\**\FSSHTTPandWOPIFiddlerInspector.pdb
        TargetFolder: '$(build.artifactstagingdirectory)'
        flattenFolders: true
        CleanTargetFolder: true
        OverWrite: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'